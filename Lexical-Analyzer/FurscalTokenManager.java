/* FurscalTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. FurscalTokenManager.java */

/** Token Manager. */
public class FurscalTokenManager implements FurscalConstants {

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x3000000000000L) != 0L || (active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 74;
            return 104;
         }
         if ((active0 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 30;
            return 176;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 49;
         }
         if ((active0 & 0xc0218200220000L) != 0L)
         {
            jjmatchedKind = 74;
            return 60;
         }
         if ((active0 & 0x4401000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            return 44;
         }
         if ((active0 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 30;
            return 181;
         }
         if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 207;
         }
         if ((active0 & 0x102000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 11;
         }
         if ((active0 & 0x3000000L) != 0L)
         {
            jjmatchedKind = 22;
            return 52;
         }
         if ((active0 & 0x20000000010000L) != 0L)
         {
            jjmatchedKind = 74;
            return 36;
         }
         if ((active0 & 0x10000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 184;
         }
         if ((active0 & 0x100000L) != 0L)
         {
            jjmatchedKind = 74;
            return 39;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 218;
         }
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 74;
            return 65;
         }
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 22;
            return 62;
         }
         if ((active0 & 0x8800000080000L) != 0L)
         {
            jjmatchedKind = 74;
            return 83;
         }
         return -1;
      case 1:
         if ((active0 & 0x400000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 43;
         }
         if ((active0 & 0xf7319200330000L) != 0L || (active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 60;
         }
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 64;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 217;
         }
         if ((active0 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 86;
         }
         if ((active0 & 0x4000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 48;
         }
         if ((active0 & 0x8000000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 82;
         }
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 10;
         }
         if ((active0 & 0x80000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 211;
         }
         if ((active0 & 0x20000000L) != 0L)
            return 178;
         if ((active0 & 0x80000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 1;
            return 97;
         }
         if ((active0 & 0x10800000L) != 0L)
            return 52;
         return -1;
      case 2:
         if ((active0 & 0xfff9d600320000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 60;
         }
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 528;
         }
         if ((active0 & 0x80000L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 2;
            return 96;
         }
         if ((active0 & 0x100010000L) != 0L || (active1 & 0x2L) != 0L)
            return 60;
         return -1;
      case 3:
         if ((active0 & 0x2000000000L) != 0L)
         {
            jjmatchedKind = 7;
            jjmatchedPos = 3;
            return 60;
         }
         if ((active0 & 0x79d1d6002a0000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 3;
            return 60;
         }
         if ((active0 & 0x86280000100000L) != 0L)
            return 60;
         return -1;
      case 4:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x8806000080000L) != 0L)
            return 60;
         if ((active0 & 0x71501600220000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 4;
            return 60;
         }
         return -1;
      case 5:
         if ((active0 & 0x20000000000000L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x1100200220000L) != 0L)
            return 60;
         if ((active0 & 0x50401400000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 5;
            return 60;
         }
         return -1;
      case 6:
         if ((active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 6;
            return 60;
         }
         if ((active0 & 0x20000000000000L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active0 & 0x50401400000000L) != 0L)
            return 60;
         return -1;
      case 7:
         if ((active0 & 0x20000000000000L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 74;
            jjmatchedPos = 7;
            return 60;
         }
         return -1;
      case 8:
         if ((active0 & 0x20000000000000L) != 0L)
         {
            if (jjmatchedPos < 4)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 4;
            }
            return -1;
         }
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         if ((active1 & 0x1L) != 0L)
            return 60;
         return -1;
      case 9:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         return -1;
      case 10:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         return -1;
      case 11:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         return -1;
      case 12:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         return -1;
      case 13:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         return -1;
      case 14:
         if ((active0 & 0x18000000000L) != 0L)
         {
            if (jjmatchedPos < 3)
            {
               jjmatchedKind = 74;
               jjmatchedPos = 3;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 13:
         jjmatchedKind = 3;
         return jjMoveStringLiteralDfa1_0(0x10L, 0x0L);
      case 37:
         return jjStopAtPos(0, 26);
      case 40:
         return jjStopAtPos(0, 58);
      case 41:
         return jjStopAtPos(0, 59);
      case 42:
         return jjMoveStringLiteralDfa1_0(0x800000L, 0x0L);
      case 43:
         return jjMoveStringLiteralDfa1_0(0x1000000L, 0x0L);
      case 44:
         return jjStopAtPos(0, 57);
      case 45:
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 58:
         return jjMoveStringLiteralDfa1_0(0x8000000L, 0x0L);
      case 59:
         return jjStopAtPos(0, 56);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x10000000L, 0x0L);
      case 62:
         return jjMoveStringLiteralDfa1_0(0x20000000L, 0x0L);
      case 91:
         return jjStopAtPos(0, 60);
      case 93:
         return jjStopAtPos(0, 61);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x20000000010000L, 0x0L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x8800000080000L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x0L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x80000000000L, 0x0L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x80000000000000L, 0x0L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x200000L, 0x0L);
      case 104:
         return jjMoveStringLiteralDfa1_0(0x200000000000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x400000000L, 0x0L);
      case 109:
         return jjMoveStringLiteralDfa1_0(0x20000L, 0x0L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x100000L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x4401000000000L, 0x1L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x40000200000000L, 0x0L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x3000000000000L, 0x2L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x102000000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x4000000000L, 0x0L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x18000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 62);
      case 125:
         return jjStopAtPos(0, 63);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
static private int jjMoveStringLiteralDfa1_0(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 10:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 42:
         if ((active0 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(1, 23, 52);
         break;
      case 43:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(1, 24);
         break;
      case 45:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 25);
         break;
      case 60:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(1, 28, 52);
         break;
      case 61:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         break;
      case 62:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(1, 29, 178);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x4200000020000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x42001300000000L, active1, 0x2L);
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x1a000000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000200000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x10004400000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x80400000010000L, active1, 0x1L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000100000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000L, active1, 0L);
      case 121:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
static private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 69:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000000L, active1, 0L);
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(2, 32, 60);
         break;
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000L, active1, 0L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x2200000100000L, active1, 0L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x1002000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x80400000200000L, active1, 0x1L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000L, active1, 0L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0x40000400000000L, active1, 0L);
      case 114:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(2, 16, 60);
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000L, active1, 0L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0L);
      case 116:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(2, 65, 60);
         return jjMoveStringLiteralDfa3_0(active0, 0x2001c200020000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
static private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa4_0(active0, 0x8400000000000L, active1, 0x1L);
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x20102000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 49, 60);
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000L, active1, 0L);
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0x18000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000L, active1, 0L);
      case 108:
         if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(3, 20, 60);
         break;
      case 109:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 55, 60);
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x10000000020000L, active1, 0L);
      case 115:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 50, 60);
         return jjMoveStringLiteralDfa4_0(active0, 0x800000080000L, active1, 0L);
      case 116:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 43, 60);
         else if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 45, 60);
         break;
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000600000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
static private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa5_0(active0, 0x18000000000L, active1, 0L);
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L, active1, 0x1L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000400020000L, active1, 0L);
      case 107:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 51, 60);
         break;
      case 108:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 38, 60);
         break;
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x1101000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x30000200000000L, active1, 0L);
      case 115:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 37, 60);
         else if ((active0 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 47, 60);
         break;
      case 116:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(4, 19, 60);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
static private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa6_0(active0, 0x20000000000000L, active1, 0L);
      case 100:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1L);
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000L, active1, 0L);
      case 102:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 44, 60);
         break;
      case 108:
         if ((active0 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(5, 21, 60);
         break;
      case 110:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(5, 33, 60);
         else if ((active0 & 0x1000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 48, 60);
         break;
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x10000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x40001400000000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa6_0(active0, 0x18000000000L, active1, 0L);
      case 120:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(5, 17, 60);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
static private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x20000000000000L, active1, 0L);
      case 100:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 46, 60);
         break;
      case 101:
         if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(6, 34, 60);
         else if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 54, 60);
         return jjMoveStringLiteralDfa7_0(active0, 0x18000000000L, active1, 0L);
      case 109:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 36, 60);
         break;
      case 114:
         if ((active0 & 0x10000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 52, 60);
         break;
      case 117:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
static private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 108:
         return jjMoveStringLiteralDfa8_0(active0, 0x20000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x1L);
      case 115:
         return jjMoveStringLiteralDfa8_0(active0, 0x18000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
static private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(8, 64, 60);
         break;
      case 108:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStopAtPos(8, 53);
         break;
      case 116:
         return jjMoveStringLiteralDfa9_0(active0, 0x18000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
static private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 32:
         return jjMoveStringLiteralDfa10_0(active0, 0x18000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
static private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0x10000000000L);
      case 98:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
static private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa12_0(active0, 0x8000000000L);
      case 102:
         return jjMoveStringLiteralDfa12_0(active0, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
static private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 102:
         return jjMoveStringLiteralDfa13_0(active0, 0x8000000000L);
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, 0x10000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
static private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa14_0(active0, 0x10000000000L);
      case 111:
         return jjMoveStringLiteralDfa14_0(active0, 0x8000000000L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
static private int jjMoveStringLiteralDfa14_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(12, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, active0, 0L);
      return 14;
   }
   switch(curChar)
   {
      case 114:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(14, 40);
         return jjMoveStringLiteralDfa15_0(active0, 0x8000000000L);
      default :
         break;
   }
   return jjStartNfa_0(13, active0, 0L);
}
static private int jjMoveStringLiteralDfa15_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(13, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, active0, 0L);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(15, 39);
         break;
      default :
         break;
   }
   return jjStartNfa_0(14, active0, 0L);
}
static private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 528;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 49:
               case 60:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 176:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 178;
                  else if (curChar == 60)
                  {
                     if (kind > 67)
                        kind = 67;
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  if (curChar == 62)
                     { jjCheckNAdd(52); }
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 528:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 181:
                  if (curChar == 60)
                     { jjCheckNAdd(52); }
                  else if (curChar == 62)
                  {
                     if (kind > 67)
                        kind = 67;
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if ((0xac0000000000L & l) != 0L)
                  {
                     if (kind > 22)
                        kind = 22;
                  }
                  else if ((0x5000000000000000L & l) != 0L)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 38)
                     { jjAddStates(3, 5); }
                  else if (curChar == 61)
                  {
                     if (kind > 67)
                        kind = 67;
                  }
                  else if (curChar == 33)
                     { jjCheckNAdd(32); }
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 26;
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(24, 25); }
                  else if (curChar == 36)
                     jjstateSet[jjnewStateCnt++] = 22;
                  if (curChar == 60)
                     { jjCheckNAddStates(6, 8); }
                  else if (curChar == 62)
                     { jjCheckNAddStates(9, 12); }
                  else if (curChar == 42)
                     { jjCheckNAddTwoStates(52, 62); }
                  else if (curChar == 38)
                     { jjCheckNAdd(52); }
                  else if (curChar == 47)
                     { jjCheckNAdd(52); }
                  else if (curChar == 45)
                     { jjCheckNAdd(52); }
                  else if (curChar == 43)
                     { jjCheckNAdd(52); }
                  else if (curChar == 61)
                     { jjCheckNAdd(32); }
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 62:
                  if (curChar == 42)
                     { jjCheckNAdd(52); }
                  else if (curChar == 61)
                  {
                     if (kind > 70)
                        kind = 70;
                  }
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 178:
                  if (curChar == 62)
                     { jjCheckNAdd(52); }
                  else if (curChar == 61)
                  {
                     if (kind > 70)
                        kind = 70;
                  }
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 1:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(2, 3); }
                  break;
               case 2:
                  { jjCheckNAddTwoStates(2, 3); }
                  break;
               case 3:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if (curChar == 47 && kind > 6)
                     kind = 6;
                  break;
               case 21:
                  if (curChar == 36)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 23:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 24:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     { jjCheckNAddTwoStates(24, 25); }
                  break;
               case 25:
                  if (curChar == 39 && kind > 12)
                     kind = 12;
                  break;
               case 26:
                  if (curChar == 40)
                     { jjCheckNAddTwoStates(27, 28); }
                  break;
               case 27:
                  { jjCheckNAddTwoStates(27, 28); }
                  break;
               case 28:
                  if (curChar == 41 && kind > 18)
                     kind = 18;
                  break;
               case 29:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 30:
                  if ((0xac0000000000L & l) != 0L && kind > 22)
                     kind = 22;
                  break;
               case 31:
                  if ((0x5000000000000000L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 32:
                  if (curChar == 61 && kind > 30)
                     kind = 30;
                  break;
               case 33:
                  if (curChar == 61)
                     { jjCheckNAdd(32); }
                  break;
               case 34:
                  if (curChar == 33)
                     { jjCheckNAdd(32); }
                  break;
               case 51:
                  if (curChar == 61 && kind > 67)
                     kind = 67;
                  break;
               case 52:
                  if (curChar == 61 && kind > 70)
                     kind = 70;
                  break;
               case 53:
                  if (curChar == 43)
                     { jjCheckNAdd(52); }
                  break;
               case 54:
                  if (curChar == 45)
                     { jjCheckNAdd(52); }
                  break;
               case 55:
                  if (curChar == 47)
                     { jjCheckNAdd(52); }
                  break;
               case 56:
                  if (curChar == 38)
                     { jjCheckNAdd(52); }
                  break;
               case 61:
                  if (curChar == 42)
                     { jjCheckNAddTwoStates(52, 62); }
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  { jjCheckNAdd(109); }
                  break;
               case 110:
                  { jjCheckNAddTwoStates(110, 111); }
                  break;
               case 112:
                  if (curChar == 38)
                     { jjAddStates(3, 5); }
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(119, 120); }
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(120); }
                  break;
               case 120:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(13, 16); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(123); }
                  break;
               case 123:
                  if (curChar == 38 && kind > 13)
                     kind = 13;
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(122, 123); }
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(17, 19); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 130:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(132, 133); }
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(133); }
                  break;
               case 133:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(20, 23); }
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(136); }
                  break;
               case 136:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(24, 26); }
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(139); }
                  break;
               case 139:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(27, 32); }
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(142); }
                  break;
               case 142:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(33, 38); }
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(145); }
                  break;
               case 145:
                  if (curChar == 38 && kind > 15)
                     kind = 15;
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(144, 145); }
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(39, 41); }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(42, 45); }
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(46, 50); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(141, 142); }
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(51, 53); }
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(54, 57); }
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(58, 62); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(138, 139); }
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(135, 136); }
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(63, 65); }
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(66, 68); }
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(159); }
                  break;
               case 159:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(69, 74); }
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(162); }
                  break;
               case 162:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(75, 80); }
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(165); }
                  break;
               case 165:
                  if (curChar == 38 && kind > 14)
                     kind = 14;
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(164, 165); }
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(81, 83); }
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(84, 87); }
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(88, 92); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(161, 162); }
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(93, 95); }
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(96, 99); }
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddStates(100, 104); }
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(158, 159); }
                  break;
               case 175:
                  if (curChar == 62)
                     { jjCheckNAddStates(9, 12); }
                  break;
               case 177:
                  if (curChar == 62)
                     { jjCheckNAdd(52); }
                  break;
               case 179:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 60)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 182:
                  if (curChar == 60)
                     { jjCheckNAdd(52); }
                  break;
               case 195:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 239:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 244:
                  if (curChar == 46)
                     { jjCheckNAdd(243); }
                  break;
               case 248:
                  if (curChar == 50 && kind > 68)
                     kind = 68;
                  break;
               case 253:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 258:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 263:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 269:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 273:
                  if (curChar == 48 && kind > 68)
                     kind = 68;
                  break;
               case 274:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 277:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 281:
                  if (curChar == 50)
                     { jjCheckNAdd(243); }
                  break;
               case 285:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 289:
                  if (curChar == 48)
                     { jjCheckNAdd(243); }
                  break;
               case 290:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 294:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 302:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 311:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 319:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 327:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 334:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 338:
                  if (curChar == 50 && kind > 69)
                     kind = 69;
                  break;
               case 343:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 351:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 357:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 364:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 370:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 377:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 383:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 390:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 397:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 404:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 411:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 415:
                  if (curChar == 48 && kind > 71)
                     kind = 71;
                  break;
               case 416:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 420:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 424:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 428:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 432:
                  if (curChar == 50 && kind > 71)
                     kind = 71;
                  break;
               case 436:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 443:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 450:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 460:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 469:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 477:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 484:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 483;
                  break;
               case 492:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 491;
                  break;
               case 501:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 500;
                  break;
               case 508:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 507;
                  break;
               case 512:
                  if (curChar == 49 && kind > 71)
                     kind = 71;
                  break;
               case 517:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 516;
                  break;
               case 524:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 523;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 49:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 96:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 36:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 184:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 202;
                  else if (curChar == 114)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 217:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 86:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 89;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 218:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 234;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 225;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 217;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 231;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 528:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 101)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  break;
               case 104:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 106;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 11:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 64:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 77;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 71;
                  if (curChar == 116)
                  {
                     if (kind > 7)
                        kind = 7;
                  }
                  break;
               case 48:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 97:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 39:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 83:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 97;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 90;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 82;
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 43:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 0:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  else if (curChar == 124)
                     { jjCheckNAdd(52); }
                  else if (curChar == 94)
                     { jjCheckNAdd(52); }
                  if (curChar == 77)
                     { jjAddStates(105, 142); }
                  else if (curChar == 100)
                     { jjAddStates(143, 147); }
                  else if (curChar == 101)
                     { jjAddStates(148, 149); }
                  else if (curChar == 111)
                     { jjAddStates(150, 152); }
                  else if (curChar == 115)
                     { jjAddStates(153, 154); }
                  else if (curChar == 99)
                     { jjAddStates(155, 158); }
                  else if (curChar == 105)
                     { jjAddStates(159, 161); }
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 49;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 44;
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 11;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 82:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 65:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 78;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 72;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 211:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 207:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 211;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 10:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 74)
                        kind = 74;
                     { jjCheckNAdd(60); }
                  }
                  if (curChar == 109)
                     { jjCheckNAdd(9); }
                  break;
               case 2:
                  { jjAddStates(162, 163); }
                  break;
               case 5:
                  if (curChar == 108 && kind > 7)
                     kind = 7;
                  break;
               case 6:
                  if (curChar == 111)
                     { jjCheckNAdd(5); }
                  break;
               case 7:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 101 && kind > 7)
                     kind = 7;
                  break;
               case 12:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 101 && kind > 10)
                     kind = 10;
                  break;
               case 14:
                  if (curChar == 117)
                     { jjCheckNAdd(13); }
                  break;
               case 15:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 115)
                     { jjCheckNAdd(13); }
                  break;
               case 18:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 22:
                  if ((0x7fffffe07fffffeL & l) != 0L && kind > 11)
                     kind = 11;
                  break;
               case 24:
                  { jjAddStates(164, 165); }
                  break;
               case 27:
                  { jjAddStates(166, 167); }
                  break;
               case 35:
                  if (curChar == 100 && kind > 31)
                     kind = 31;
                  break;
               case 37:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 116 && kind > 31)
                     kind = 31;
                  break;
               case 40:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 116 && kind > 41)
                     kind = 41;
                  break;
               case 42:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 45:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 110 && kind > 66)
                     kind = 66;
                  break;
               case 47:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 50:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 57:
                  if (curChar == 94)
                     { jjCheckNAdd(52); }
                  break;
               case 58:
                  if (curChar == 124)
                     { jjCheckNAdd(52); }
                  break;
               case 59:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 60:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(60); }
                  break;
               case 63:
                  if (curChar == 105)
                     { jjAddStates(159, 161); }
                  break;
               case 66:
                  if (curChar == 116 && kind > 66)
                     kind = 66;
                  break;
               case 67:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 74:
                  if (curChar == 101 && kind > 66)
                     kind = 66;
                  break;
               case 75:
               case 208:
                  if (curChar == 100)
                     { jjCheckNAdd(74); }
                  break;
               case 76:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 78;
                  break;
               case 80:
                  if (curChar == 99)
                     { jjAddStates(155, 158); }
                  break;
               case 81:
                  if (curChar == 114 && kind > 7)
                     kind = 7;
                  break;
               case 84:
                  if (curChar == 114 && kind > 42)
                     kind = 42;
                  break;
               case 85:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 87:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 110 && kind > 42)
                     kind = 42;
                  break;
               case 89:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 115 && kind > 67)
                     kind = 67;
                  break;
               case 93:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 98:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 115)
                     { jjAddStates(153, 154); }
                  break;
               case 100:
                  if (curChar == 103 && kind > 7)
                     kind = 7;
                  break;
               case 101:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 105:
                  if (curChar == 119 && kind > 41)
                     kind = 41;
                  break;
               case 106:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 110:
                  { jjAddStates(168, 169); }
                  break;
               case 111:
                  if (curChar == 102 && kind > 9)
                     kind = 9;
                  break;
               case 183:
                  if (curChar == 111)
                     { jjAddStates(150, 152); }
                  break;
               case 185:
                  if (curChar == 101 && kind > 35)
                     kind = 35;
                  break;
               case 186:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 102 && kind > 35)
                     kind = 35;
                  break;
               case 194:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 196:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 101)
                     { jjAddStates(148, 149); }
                  break;
               case 205:
                  if (curChar == 111 && kind > 41)
                     kind = 41;
                  break;
               case 206:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 209:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 212:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 100)
                     { jjAddStates(143, 147); }
                  break;
               case 214:
                  if (curChar == 97)
                     { jjCheckNAdd(5); }
                  break;
               case 215:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 219:
                  if (curChar == 116)
                     { jjCheckNAdd(9); }
                  break;
               case 220:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 109)
                     { jjCheckNAdd(9); }
                  break;
               case 222:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 121 && kind > 41)
                     kind = 41;
                  break;
               case 228:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 102 && kind > 66)
                     kind = 66;
                  break;
               case 234:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 77)
                     { jjAddStates(105, 142); }
                  break;
               case 237:
                  if (curChar == 73 && kind > 68)
                     kind = 68;
                  break;
               case 238:
                  if (curChar == 80)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 240:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 69 && kind > 68)
                     kind = 68;
                  break;
               case 245:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 249:
                  if (curChar == 84)
                     { jjCheckNAdd(248); }
                  break;
               case 250:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 81)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 254:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 95)
                     { jjCheckNAdd(248); }
                  break;
               case 259:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 81)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 264:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 78)
                     { jjCheckNAdd(248); }
                  break;
               case 268:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 270:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 275:
                  if (curChar == 78)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 278:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 282:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 286:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 291:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 295:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 115 && kind > 69)
                     kind = 69;
                  break;
               case 299:
               case 355:
                  if (curChar == 111)
                     { jjCheckNAdd(298); }
                  break;
               case 300:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 303:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 104 && kind > 69)
                     kind = 69;
                  break;
               case 307:
               case 361:
                  if (curChar == 115)
                     { jjCheckNAdd(306); }
                  break;
               case 308:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 312:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 110 && kind > 69)
                     kind = 69;
                  break;
               case 316:
               case 368:
                  if (curChar == 105)
                     { jjCheckNAdd(315); }
                  break;
               case 317:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 320:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
               case 347:
               case 374:
               case 387:
                  if (curChar == 110)
                     { jjCheckNAdd(306); }
                  break;
               case 324:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 328:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
               case 381:
                  if (curChar == 97)
                     { jjCheckNAdd(315); }
                  break;
               case 332:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 331;
                  break;
               case 333:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 332;
                  break;
               case 335:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 339:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 344:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 348:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 352:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 353:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 356:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 358:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 357;
                  break;
               case 359:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 362:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 365:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 369:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 371:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 370;
                  break;
               case 372:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 375:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 378:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 377;
                  break;
               case 379:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 382:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 384:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 386:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 388:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 391:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 390;
                  break;
               case 392:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 115 && kind > 71)
                     kind = 71;
                  break;
               case 395:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 398:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 112 && kind > 71)
                     kind = 71;
                  break;
               case 402:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 405:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 406;
                  break;
               case 408:
                  if (curChar == 103 && kind > 71)
                     kind = 71;
                  break;
               case 409:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 412:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 417:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 421:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 422:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 421;
                  break;
               case 423:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 422;
                  break;
               case 425:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 429:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 431:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 433:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 437:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 120 && kind > 71)
                     kind = 71;
                  break;
               case 441:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 444:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if (curChar == 110 && kind > 71)
                     kind = 71;
                  break;
               case 448:
                  if (curChar == 105)
                     { jjCheckNAdd(447); }
                  break;
               case 449:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               case 451:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 450;
                  break;
               case 452:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if (curChar == 109 && kind > 71)
                     kind = 71;
                  break;
               case 455:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 461:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if (curChar == 100 && kind > 71)
                     kind = 71;
                  break;
               case 465:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 464;
                  break;
               case 466:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 467:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 470:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 471;
                  break;
               case 473:
                  if (curChar == 116 && kind > 71)
                     kind = 71;
                  break;
               case 474:
               case 505:
                  if (curChar == 114)
                     { jjCheckNAdd(473); }
                  break;
               case 475:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 475;
                  break;
               case 478:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 477;
                  break;
               case 479:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if (curChar == 119 && kind > 71)
                     kind = 71;
                  break;
               case 482:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               case 485:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 484;
                  break;
               case 486:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 485;
                  break;
               case 487:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 486;
                  break;
               case 488:
                  if (curChar == 108 && kind > 71)
                     kind = 71;
                  break;
               case 489:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 488;
                  break;
               case 490:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 489;
                  break;
               case 491:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 490;
                  break;
               case 493:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 492;
                  break;
               case 494:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 493;
                  break;
               case 495:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 494;
                  break;
               case 496:
                  if (curChar == 114 && kind > 71)
                     kind = 71;
                  break;
               case 497:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 496;
                  break;
               case 498:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 497;
                  break;
               case 499:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 498;
                  break;
               case 500:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 499;
                  break;
               case 502:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 501;
                  break;
               case 503:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 502;
                  break;
               case 504:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 503;
                  break;
               case 506:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 505;
                  break;
               case 507:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 506;
                  break;
               case 509:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 508;
                  break;
               case 510:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 509;
                  break;
               case 511:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 510;
                  break;
               case 513:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 512;
                  break;
               case 514:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 513;
                  break;
               case 515:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 514;
                  break;
               case 516:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 515;
                  break;
               case 518:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 517;
                  break;
               case 519:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 518;
                  break;
               case 520:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 519;
                  break;
               case 521:
                  if (curChar == 103)
                     { jjCheckNAdd(447); }
                  break;
               case 522:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 521;
                  break;
               case 523:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 522;
                  break;
               case 525:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 524;
                  break;
               case 526:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 525;
                  break;
               case 527:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 526;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(162, 163); }
                  break;
               case 24:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(164, 165); }
                  break;
               case 27:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(166, 167); }
                  break;
               case 110:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(168, 169); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 528 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, "\141\162\162", "\155\141\164\162\151\170", null, 
"\143\157\156\163\164", "\156\165\154\154", "\147\154\157\142\141\154", null, "\52\52", "\53\53", 
"\55\55", "\45", "\72\75", "\74\74", "\76\76", null, null, "\144\145\146", 
"\162\145\164\165\162\156", "\151\156\161\165\151\162\145", null, "\160\145\162\146\157\162\155", 
"\164\151\155\145\163", "\165\156\164\151\154", 
"\167\151\164\150\40\164\145\163\164\40\142\145\146\157\162\145", "\167\151\164\150\40\164\145\163\164\40\141\146\164\145\162", null, null, 
"\145\170\151\164", "\164\171\160\145\157\146", "\150\141\154\164", 
"\160\162\157\143\145\145\144", "\143\154\141\163\163", "\163\165\155\155\157\156", "\163\145\154\146", 
"\160\141\163\163", "\143\150\145\143\153", "\157\156\105\162\162\157\162", 
"\141\146\164\145\162\40\141\154\154", "\162\145\161\165\151\162\145", "\146\162\157\155", "\73", "\54", "\50", 
"\51", "\133", "\135", "\173", "\175", "\160\162\157\143\145\144\165\162\145", 
"\163\145\164", null, null, null, null, null, null, null, null, null, };
static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   109, 110, 111, 113, 126, 157, 32, 181, 182, 32, 176, 177, 179, 122, 123, 124, 
   125, 122, 123, 124, 135, 136, 155, 156, 138, 139, 154, 141, 142, 150, 151, 152, 
   153, 144, 145, 146, 147, 148, 149, 144, 145, 146, 144, 145, 146, 147, 144, 145, 
   146, 147, 148, 141, 142, 150, 141, 142, 150, 151, 141, 142, 150, 151, 152, 135, 
   136, 155, 158, 159, 174, 161, 162, 170, 171, 172, 173, 164, 165, 166, 167, 168, 
   169, 164, 165, 166, 164, 165, 166, 167, 164, 165, 166, 167, 168, 161, 162, 170, 
   161, 162, 170, 171, 161, 162, 170, 171, 172, 242, 247, 256, 266, 272, 280, 288, 
   297, 305, 314, 322, 330, 337, 346, 354, 360, 367, 373, 380, 386, 393, 400, 407, 
   414, 423, 431, 439, 446, 453, 463, 472, 480, 487, 495, 504, 511, 520, 527, 218, 
   220, 226, 232, 235, 207, 212, 184, 192, 203, 104, 107, 83, 87, 91, 98, 65, 
   73, 79, 2, 3, 24, 25, 27, 28, 110, 111, 
};

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         TokenLexicalActions(matchedToken);
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
static void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
static void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 6 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<COMMENT>");
         break;
      case 7 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<TYPE>");
         break;
      case 8 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<INTDEF>");
         break;
      case 9 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<DECIMALDEF>");
         break;
      case 10 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<BOOLDEF>");
         break;
      case 11 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<CHARDEF>");
         break;
      case 12 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<STRINGDEF>");
         break;
      case 13 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<DATEDEF>");
         break;
      case 14 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<TIMEDEF>");
         break;
      case 15 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<DATETIMEDEF>");
         break;
      case 16 :
        image.append(jjstrLiteralImages[16]);
        lengthOfMatch = jjstrLiteralImages[16].length();
    System.out.println("<ARR>");
         break;
      case 17 :
        image.append(jjstrLiteralImages[17]);
        lengthOfMatch = jjstrLiteralImages[17].length();
    System.out.println("<MATRIX>");
         break;
      case 18 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<ARRAYSETDEF>");
         break;
      case 19 :
        image.append(jjstrLiteralImages[19]);
        lengthOfMatch = jjstrLiteralImages[19].length();
    System.out.println("<CONSTANT>");
         break;
      case 20 :
        image.append(jjstrLiteralImages[20]);
        lengthOfMatch = jjstrLiteralImages[20].length();
    System.out.println("<NULL>");
         break;
      case 21 :
        image.append(jjstrLiteralImages[21]);
        lengthOfMatch = jjstrLiteralImages[21].length();
    System.out.println("<GLOBAL>");
         break;
      case 22 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<ARITHMETICOPERATOR>");
         break;
      case 23 :
        image.append(jjstrLiteralImages[23]);
        lengthOfMatch = jjstrLiteralImages[23].length();
    System.out.println("<POWER>");
         break;
      case 24 :
        image.append(jjstrLiteralImages[24]);
        lengthOfMatch = jjstrLiteralImages[24].length();
    System.out.println("<POSTFIXINC>");
         break;
      case 25 :
        image.append(jjstrLiteralImages[25]);
        lengthOfMatch = jjstrLiteralImages[25].length();
    System.out.println("<POSTFIXDEC>");
         break;
      case 26 :
        image.append(jjstrLiteralImages[26]);
        lengthOfMatch = jjstrLiteralImages[26].length();
    System.out.println("<MODULUS>");
         break;
      case 27 :
        image.append(jjstrLiteralImages[27]);
        lengthOfMatch = jjstrLiteralImages[27].length();
    System.out.println("<ASSIGN>");
         break;
      case 28 :
        image.append(jjstrLiteralImages[28]);
        lengthOfMatch = jjstrLiteralImages[28].length();
    System.out.println("<SHIFTLEFT>");
         break;
      case 29 :
        image.append(jjstrLiteralImages[29]);
        lengthOfMatch = jjstrLiteralImages[29].length();
    System.out.println("<SHIFTRIGHT>");
         break;
      case 30 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<RELATIONALOPERATOR>");
         break;
      case 31 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<LOGICALOPERATOR>");
         break;
      case 32 :
        image.append(jjstrLiteralImages[32]);
        lengthOfMatch = jjstrLiteralImages[32].length();
    System.out.println("<FUNCTIONDECLARE>");
         break;
      case 33 :
        image.append(jjstrLiteralImages[33]);
        lengthOfMatch = jjstrLiteralImages[33].length();
    System.out.println("<RETURN>");
         break;
      case 34 :
        image.append(jjstrLiteralImages[34]);
        lengthOfMatch = jjstrLiteralImages[34].length();
    System.out.println("<QUESTION>");
         break;
      case 35 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<DEFAULT_>");
         break;
      case 36 :
        image.append(jjstrLiteralImages[36]);
        lengthOfMatch = jjstrLiteralImages[36].length();
    System.out.println("<LOOP>");
         break;
      case 37 :
        image.append(jjstrLiteralImages[37]);
        lengthOfMatch = jjstrLiteralImages[37].length();
    System.out.println("<LOOPCOUNTER>");
         break;
      case 38 :
        image.append(jjstrLiteralImages[38]);
        lengthOfMatch = jjstrLiteralImages[38].length();
    System.out.println("<LOPPUNTIL>");
         break;
      case 39 :
        image.append(jjstrLiteralImages[39]);
        lengthOfMatch = jjstrLiteralImages[39].length();
    System.out.println("<LOOPTESTBEFORE>");
         break;
      case 40 :
        image.append(jjstrLiteralImages[40]);
        lengthOfMatch = jjstrLiteralImages[40].length();
    System.out.println("<LOOPTESTAFTER>");
         break;
      case 41 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<SHOW>");
         break;
      case 42 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<CLEAR>");
         break;
      case 43 :
        image.append(jjstrLiteralImages[43]);
        lengthOfMatch = jjstrLiteralImages[43].length();
    System.out.println("<EXIT>");
         break;
      case 44 :
        image.append(jjstrLiteralImages[44]);
        lengthOfMatch = jjstrLiteralImages[44].length();
    System.out.println("<TYPEOF>");
         break;
      case 45 :
        image.append(jjstrLiteralImages[45]);
        lengthOfMatch = jjstrLiteralImages[45].length();
    System.out.println("<HALT>");
         break;
      case 46 :
        image.append(jjstrLiteralImages[46]);
        lengthOfMatch = jjstrLiteralImages[46].length();
    System.out.println("<PROCCED>");
         break;
      case 47 :
        image.append(jjstrLiteralImages[47]);
        lengthOfMatch = jjstrLiteralImages[47].length();
    System.out.println("<CLASSDECLARE>");
         break;
      case 48 :
        image.append(jjstrLiteralImages[48]);
        lengthOfMatch = jjstrLiteralImages[48].length();
    System.out.println("<OBJECTDECLARE>");
         break;
      case 49 :
        image.append(jjstrLiteralImages[49]);
        lengthOfMatch = jjstrLiteralImages[49].length();
    System.out.println("<SELF>");
         break;
      case 50 :
        image.append(jjstrLiteralImages[50]);
        lengthOfMatch = jjstrLiteralImages[50].length();
    System.out.println("<PASSALL>");
         break;
      case 51 :
        image.append(jjstrLiteralImages[51]);
        lengthOfMatch = jjstrLiteralImages[51].length();
    System.out.println("<CHECK>");
         break;
      case 52 :
        image.append(jjstrLiteralImages[52]);
        lengthOfMatch = jjstrLiteralImages[52].length();
    System.out.println("<ONERROR>");
         break;
      case 53 :
        image.append(jjstrLiteralImages[53]);
        lengthOfMatch = jjstrLiteralImages[53].length();
    System.out.println("<AFTERALL>");
         break;
      case 54 :
        image.append(jjstrLiteralImages[54]);
        lengthOfMatch = jjstrLiteralImages[54].length();
    System.out.println("<REQUIRE>");
         break;
      case 55 :
        image.append(jjstrLiteralImages[55]);
        lengthOfMatch = jjstrLiteralImages[55].length();
    System.out.println("<FROM>");
         break;
      case 56 :
        image.append(jjstrLiteralImages[56]);
        lengthOfMatch = jjstrLiteralImages[56].length();
    System.out.println("<LINE_END>");
         break;
      case 57 :
        image.append(jjstrLiteralImages[57]);
        lengthOfMatch = jjstrLiteralImages[57].length();
    System.out.println("<SEPARATOR>");
         break;
      case 58 :
        image.append(jjstrLiteralImages[58]);
        lengthOfMatch = jjstrLiteralImages[58].length();
    System.out.println("<PARENTHESIS_LEFT>");
         break;
      case 59 :
        image.append(jjstrLiteralImages[59]);
        lengthOfMatch = jjstrLiteralImages[59].length();
    System.out.println("<PARENTHESIS_RIGHT>");
         break;
      case 60 :
        image.append(jjstrLiteralImages[60]);
        lengthOfMatch = jjstrLiteralImages[60].length();
    System.out.println("<SQUARE_LEFT>");
         break;
      case 61 :
        image.append(jjstrLiteralImages[61]);
        lengthOfMatch = jjstrLiteralImages[61].length();
    System.out.println("<SQUARE_RIGHT>");
         break;
      case 62 :
        image.append(jjstrLiteralImages[62]);
        lengthOfMatch = jjstrLiteralImages[62].length();
    System.out.println("<BRACKET_LEFT>");
         break;
      case 63 :
        image.append(jjstrLiteralImages[63]);
        lengthOfMatch = jjstrLiteralImages[63].length();
    System.out.println("<BRACKET_RIGHT>");
         break;
      case 64 :
        image.append(jjstrLiteralImages[64]);
        lengthOfMatch = jjstrLiteralImages[64].length();
    System.out.println("<PROCEDURE>");
         break;
      case 65 :
        image.append(jjstrLiteralImages[65]);
        lengthOfMatch = jjstrLiteralImages[65].length();
    System.out.println("<SET>");
         break;
      case 66 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<SET_OPERATIONS>");
         break;
      case 67 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<SET_COMPARISONS>");
         break;
      case 68 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<MATH_CONSTANTS>");
         break;
      case 69 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<TRIG_FUNCTIONS>");
         break;
      case 70 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<ASSIGN_OPERATORS>");
         break;
      case 71 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<ARITHMETIC_FUNCTIONS>");
         break;
      case 74 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
    System.out.println("<ID>");
         break;
      default :
         break;
   }
}
static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public FurscalTokenManager(SimpleCharStream stream){

      if (input_stream != null)
        throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);

    input_stream = stream;
  }

  /** Constructor. */
  public FurscalTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  static public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  static private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 528; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  static public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public static void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffffffffc1L, 0x4ffL, 
};
static final long[] jjtoSkip = {
   0x3eL, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    static protected SimpleCharStream  input_stream;

    static private final int[] jjrounds = new int[528];
    static private final int[] jjstateSet = new int[2 * 528];
    private static final StringBuilder jjimage = new StringBuilder();
    private static StringBuilder image = jjimage;
    private static int jjimageLen;
    private static int lengthOfMatch;
    static protected int curChar;
}
